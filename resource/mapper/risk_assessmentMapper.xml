<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.dao.RiskAssessmentDao" >
	<select id="isExistByprjId" parameterType="String" resultType="int">
		select count(ra_id) from risk_assessment where prj_name=#{prjName}
	</select>
	<insert id="addRiskAssessment" parameterType="riskassessment">
		insert into risk_assessment(ra_id,prj_name,prj_no,prj_scale,prj_type,pecific_assessment,
			flows,profitability,contract_model,conditions_terms,price_adjustment,payment_clause,
			cultural_environment,geographical_conditions,technical_difficulty,safety_management_difficulty,evaluation_method) 
		values(#{riskassessment.raId},#{riskassessment.prjName},#{riskassessment.prjNo},#{riskassessment.prjScale},#{riskassessment.prjType},
			#{riskassessment.pecificAssessment},#{riskassessment.flows},
			#{riskassessment.profitability},#{riskassessment.contractModel},#{riskassessment.conditionsTerms},
			#{riskassessment.priceAdjustment},#{riskassessment.paymentClause},#{riskassessment.culturalEnvironment},
			#{riskassessment.geographicalConditions},#{riskassessment.technicalDifficulty},#{riskassessment.safetyManagementDifficulty},
			#{riskassessment.evaluationMethod})
	</insert>
	<delete id="deleteRiskAssessmentById" parameterType="String">
		delete from risk_assessment where ra_id=#{raId}
	</delete>
	<update id="updateRiskAssessmentById" parameterType="org.ldxx.bean.RiskAssessment" >
	   update risk_assessment
	   set prj_name = #{riskassessment.prjName,jdbcType=VARCHAR},
	   	 prj_no=#{riskassessment.prjNo,jdbcType=VARCHAR},
	   	 prj_scale = #{riskassessment.prjScale,jdbcType=VARCHAR},
	   	 prj_type = #{riskassessment.prjType,jdbcType=VARCHAR},
	     pecific_assessment = #{riskassessment.pecificAssessment,jdbcType=VARCHAR},
	     flows = #{riskassessment.flows,jdbcType=VARCHAR},
	     profitability = #{riskassessment.profitability,jdbcType=VARCHAR},
	     contract_model = #{riskassessment.contractModel,jdbcType=VARCHAR},
	     conditions_terms = #{riskassessment.conditionsTerms,jdbcType=VARCHAR},
	     price_adjustment = #{riskassessment.priceAdjustment,jdbcType=VARCHAR},
	     payment_clause = #{riskassessment.paymentClause,jdbcType=VARCHAR},
	     cultural_environment = #{riskassessment.culturalEnvironment,jdbcType=VARCHAR},
	     geographical_conditions = #{riskassessment.geographicalConditions,jdbcType=VARCHAR},
	     technical_difficulty = #{riskassessment.technicalDifficulty,jdbcType=VARCHAR},
	     safety_management_difficulty = #{riskassessment.safetyManagementDifficulty,jdbcType=VARCHAR},
	     evaluation_method = #{riskassessment.evaluationMethod,jdbcType=VARCHAR}
	   where ra_id = #{riskassessment.raId,jdbcType=VARCHAR}
	 </update>
	 <select id="selectRiskAssessmentById" parameterType="String" resultType="riskassessment">
	 	select * from risk_assessment where ra_id=#{raId}
	 </select>
	 <select id="countOfPrjId" parameterType="String" resultType="int">
	 	select count(ra_id) from risk_assessment where prj_name=#{prjName} and ra_id!=#{raId}
	 </select>
	 <select id="selectAllRiskAssessment" resultType="riskassessment">
	 	select r.* from risk_assessment r
	 		left join mode_status m on r.ra_id=m.mode_id
	 		where m.status=#{status}
	 </select>
	 <select id="selectRiskAssessmentPrjName" resultType="riskassessment">
	 	select ra_id,prj_name from risk_assessment
	 </select>
	 <select id="selectIdByName" resultType="riskassessment">
	 	select ra_id from risk_assessment where prj_name=#{prjName}
	 </select>
</mapper>