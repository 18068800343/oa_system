<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.dao.BudgetFpplicationFormDao" >
	<insert id="saveBudge" parameterType="BudgetFpplicationForm">
		insert into budget_fpplication_form(bf_id,bf_no,prj_id,task_no,prj_unit,prj_mode,budget_date,declarer,make_time,state,all_cost,department,all_main_material_money) values
			(#{budge.bfId},#{budge.bfNo},#{budge.prjId},#{budge.taskNo },#{budge.prjUnit},#{budge.prjMode},#{budge.budgetDate},#{budge.declarer},now(),1,#{budge.allCost},#{budge.department},#{budge.allMainMaterialMoney})
	</insert>
	<delete id="deleteBudgeById" parameterType="String">
		delete from budget_fpplication_form where bf_id=#{id}
	</delete>
	<update id="updateBudge" parameterType="BudgetFpplicationForm">
		update budget_fpplication_form 
			set prj_id=#{budge.prjId},
				task_no =#{budge.taskNo},
				prj_unit=#{budge.prjUnit},
				prj_mode=#{budge.prjMode},
				budget_date=#{budge.budgetDate},
				declarer=#{budge.declarer},
				make_time=now(),
				
				all_cost=#{budge.allCost},
				department=#{budge.department},
				all_main_material_money=#{budge.allMainMaterialMoney}
			where bf_id=#{budge.bfId}
	</update>
	<select id="selectBudgeByStatus"  resultType="BudgetFpplicationForm">
		select b.*,c.om_name,t.prj_estimate_money from budget_fpplication_form b 
			left join mode_status m on b.bf_id=m.mode_id 
			left join organization_management c on b.department=c.om_id
			LEFT JOIN task t on b.task_no=t.prj_no
			<where>
				<if test="timeMin!=''">
					Budget_date &gt;= #{timeMin}	and Budget_date &lt;= #{timeMax} and 
				</if>
				<if test="costMin!=0">
					all_cost &gt;= #{costMin} and all_cost &lt;= #{costMax} and 
				</if>
				m.status=#{status} and b.state=1 GROUP BY bf_id
			</where>
	</select>
	<select id="selectBudgeById" resultType="BudgetFpplicationForm">
		select *,c.om_name,t.prj_estimate_money from budget_fpplication_form b
		 left join organization_management c on b.department=c.om_id 
		 LEFT JOIN task t on b.task_no=t.prj_no
		 where bf_id=#{id} LIMIT 1
	</select>
	<select id="selectBudgeHistory" resultType="BudgetFpplicationForm">
		select * from budget_fpplication_form where bf_no=#{no} and state=0
	</select>
	
	<select id="countNo" resultType="int">
		select count(1) from (select distinct bf_no from budget_fpplication_form where bf_no like #{year}) as a
	</select>
	
	<select id="selectBudgeByNo" resultType="BudgetFpplicationForm">
		select * from budget_fpplication_form as a 
		left join mode_status as b on a.bf_id=b.mode_id
		where task_no=#{no} and a.state=1 and b.status=2 and bf_no is not null
	</select>
	
	<select id="selectBudgeByNoAllCost" resultType="BudgetFpplicationForm">
		select 	SUM(all_cost) as all_cost,a.* from budget_fpplication_form as a 
		left join mode_status as b on a.bf_id=b.mode_id
		where task_no=#{no} and a.state=1 and b.status=2 and bf_no is not null
	</select>
	
	<select id="selectBudgeByName" resultType="BudgetFpplicationForm">
		select * from budget_fpplication_form as a 
		left join mode_status as b on a.bf_id=b.mode_id
		where prj_id=#{name} and a.state=1 and b.status=2 limit 1
	</select>
	
	<select id="getBudgeCost" resultType="Double">
		select IFNULL(sum(cost_amount),0)as sum from cost_budget where cb_id in(
		SELECT bf_id FROM budget_fpplication_form as a LEFT JOIN mode_status as b
		on a.bf_id=b.mode_id
		where a.Budget_date like #{year} and b.status=2 and a.state=1) and department=#{department}
	</select>
	
	<select id="getAllCost" resultType="BudgetFpplicationForm">
		select all_cost from budget_fpplication_form as a left join mode_status as b on a.bf_id=b.mode_id
		where a.task_no=#{no} and a.state=1 and b.status=2
	</select>
	
	<update id="updateHistoryById">
		UPDATE budget_fpplication_form SET state=0  where bf_no =(select a.bf_no from (SELECT bf_no from budget_fpplication_form WHERE bf_id=#{id}) AS a)
	</update>
	<update id="changeStateById" parameterType="String">
		update budget_fpplication_form  set state=1 where bf_id=#{id}
	</update>
	
	<select id="selectNwCostByTaskNo" resultType="CostBudget">
		SELECT IFNULL(SUM(c.cost_amount),0)as cost_amount  FROM budget_fpplication_form as a
		LEFT JOIN mode_status as b on a.bf_id=b.mode_id
		LEFT JOIN cost_budget as c on a.bf_id=c.cb_id
		where b.status=2 and a.state=1 and a.task_no=#{no} and c.prj_detail=#{type}
	</select>
	
	<select id="selectNwCostByTaskNoAndDept" resultType="CostBudget">
		select sum(e.cost_amount)as cost_amount,e.department,f.om_name as name2 from (		
			SELECT c.department,c.cost_amount  FROM budget_fpplication_form as a
			LEFT JOIN mode_status as b on a.bf_id=b.mode_id
			LEFT JOIN cost_budget as c on a.bf_id=c.cb_id
			LEFT JOIN organization_management as d on c.department=d.om_id
			where b.status=2 and a.state=1 and a.task_no=#{no} and c.prj_detail=#{type} )as e 
		LEFT JOIN organization_management as f on e.department=f.om_id
		GROUP BY e.department
	</select>
	
	<update id="updateBfNoById">
		update budget_fpplication_form set bf_no=#{code} where bf_id=#{id}
	</update>
	
	<select id="CreateBudgetNumOrder" statementType="CALLABLE" resultType="java.lang.String">
		select CreateBudgetNumOrder(#{year})
	</select>
	
	<select id="selectBudgeByStatus2"  resultType="BudgetFpplicationForm">
		select b.*,c.om_name,t.prj_estimate_money,t.main_department_money,t.assist_department1_money,t.assist_department2_money,t.assist_department3_money,o.om_name as mainName,o1.om_name as name1,o2.om_name as name2,o3.om_name as name3,m.status,f.StarterName from budget_fpplication_form b 
			left join mode_status m on b.bf_id=m.mode_id 
			left join organization_management c on b.department=c.om_id
			LEFT JOIN task t on b.task_no=t.prj_no and t.history=1
			LEFT JOIN organization_management o ON t.main_department=o.om_id
			LEFT JOIN organization_management o1 ON t.assist_department1=o1.om_id
			LEFT JOIN organization_management o2 ON t.assist_department2=o2.om_id
			LEFT JOIN organization_management o3 ON t.assist_department3=o3.om_id
			LEFT JOIN (SELECT mode_id,StarterName from (SELECT * from flowhistroy order by do_date ASC) f LEFT JOIN budget_fpplication_form a ON a.bf_id=f.mode_id  GROUP BY mode_id )  AS  f on b.bf_id=f.mode_id 
			<where>
				<if test="timeMin!=''">
					Budget_date &gt;= #{timeMin}	and Budget_date &lt;= #{timeMax} and 
				</if>
				<if test="costMin!=0">
					all_cost &gt;= #{costMin} and all_cost &lt;= #{costMax} and 
				</if>
				(m.status=1 or m.status=2 or m.status=0) and b.state=1 GROUP BY bf_id
			</where>
	</select>
	
	<select id="getSumAllCost" resultType="double">
		select SUM(all_cost) from budget_fpplication_form as a 
		left join mode_status as b on a.bf_id=b.mode_id
		where task_no=#{no} and a.state=1 and b.status=2
	</select>
	
	<select id="taskNoisExist" resultType="int">
		SELECT COUNT(0) from budget_fpplication_form b
		left join mode_status m on b.bf_id=m.mode_id 
		where (m.status=1 or m.status=2) AND b.state=1 AND b.task_no=#{no}
	</select>
	
	<select id="xgtaskNoisExist" resultType="int">
		SELECT COUNT(0) from budget_fpplication_form b
		left join mode_status m on b.bf_id=m.mode_id 
		where (m.status=1 or m.status=2) and b.state=1 AND b.task_no=#{taskNo} AND b.bf_id!=#{bfId}
	</select>
</mapper>