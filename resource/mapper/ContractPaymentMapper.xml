<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.dao.ContractPaymentDao" >
	<select id="selectPayByStatus" resultType="org.ldxx.bean.Pay">
		select a.*,f.contract_money as fbcontractMoney,f.contract_name_yi,b.u_name from pay a
			left join mode_status m on m.mode_id=a.pay_id
			left join fb_contract f on a.contract_no=f.fb_no and f.history=1
			left join user b on a.compiler_person=b.user_id
		where m.status=#{status}
	</select>
 	<insert id="addPaySave" parameterType="org.ldxx.bean.Pay" >
    insert into pay (pay_id,pay_code, contract_name,sk_money,sk_scale,contract_no, 
      contract_money, already_kp_money, this_time_kp_money, 
      main_contract_code, main_contract_name, main_contract_money, 
      prj_list_code, prj_name, fb_contract_schedule, 
      if_contract_do_cost, contract_do_cost_money, 
      generation_advances_money,this_time_ask_money, 
      pay_method,
      pay_list_explain, compiler_person, compiler_time, 
      make_time)
    values (#{pay.payId,jdbcType=VARCHAR},#{pay.payCode,jdbcType=VARCHAR}, #{pay.contractName,jdbcType=VARCHAR},#{pay.skMoney},#{pay.skScale},
      #{pay.contractNo,jdbcType=VARCHAR},#{pay.contractMoney,jdbcType=VARCHAR}, #{pay.alreadyKpMoney,jdbcType=VARCHAR}, #{pay.thisTimeKpMoney,jdbcType=VARCHAR}, 
      #{pay.mainContractCode,jdbcType=VARCHAR}, #{pay.mainContractName,jdbcType=VARCHAR}, #{pay.mainContractMoney,jdbcType=VARCHAR}, 
      #{pay.prjListCode,jdbcType=VARCHAR}, #{pay.prjName,jdbcType=VARCHAR}, #{pay.fbContractSchedule,jdbcType=VARCHAR}, 
      #{pay.ifContractDoCost,jdbcType=VARCHAR}, #{pay.contractDoCostMoney,jdbcType=VARCHAR}, 
      #{pay.GenerationAdvancesMoney,jdbcType=VARCHAR}, #{pay.thisTimeAskMoney,jdbcType=VARCHAR}, 
      #{pay.payMethod,jdbcType=VARCHAR},
      #{pay.payListExplain,jdbcType=VARCHAR},#{pay.compilerPerson,jdbcType=VARCHAR}, #{pay.compilerTime,jdbcType=VARCHAR}, 
      now())
  	</insert>
  	
  	<update id="updatePayById">
  		update pay set 
  		pay_code=#{pay.payCode,jdbcType=VARCHAR}, 
  		contract_name=#{pay.contractName,jdbcType=VARCHAR},
  		sk_money=#{pay.skMoney},
  		sk_scale=#{pay.skScale},
  		contract_no=#{pay.contractNo,jdbcType=VARCHAR}, 
      	contract_money=#{pay.contractMoney,jdbcType=VARCHAR}, 
      	already_kp_money=#{pay.alreadyKpMoney,jdbcType=VARCHAR}, 
      	this_time_kp_money=#{pay.thisTimeKpMoney,jdbcType=VARCHAR}, 
      	main_contract_code= #{pay.mainContractCode,jdbcType=VARCHAR}, 
      	main_contract_name=#{pay.mainContractName,jdbcType=VARCHAR}, 
      	main_contract_money=#{pay.mainContractMoney,jdbcType=VARCHAR}, 
      	prj_list_code= #{pay.prjListCode,jdbcType=VARCHAR}, 
      	prj_name=#{pay.prjName,jdbcType=VARCHAR}, 
      	fb_contract_schedule=#{pay.fbContractSchedule,jdbcType=VARCHAR}, 
      	if_contract_do_cost=#{pay.ifContractDoCost,jdbcType=VARCHAR},
      	contract_do_cost_money=#{pay.contractDoCostMoney,jdbcType=VARCHAR}, 
      	generation_advances_money=#{pay.GenerationAdvancesMoney,jdbcType=VARCHAR},
      	this_time_ask_money=#{pay.thisTimeAskMoney,jdbcType=VARCHAR}, 
      	pay_method=#{pay.payMethod,jdbcType=VARCHAR},
      	pay_list_explain=#{pay.payListExplain,jdbcType=VARCHAR},
       	compiler_person=#{pay.compilerPerson,jdbcType=VARCHAR}, 
      	compiler_time=#{pay.compilerTime,jdbcType=VARCHAR}, 
      	make_time=now()
      where pay_id=#{pay.payId,jdbcType=VARCHAR}
  	</update>
  	
  	<select id="selectPayById" resultType="pay">
  		select a.*,b.u_name from pay a
  		left join user b on a.compiler_person=b.user_id
  		 where pay_id=#{id}
  	</select>
  	<select id="fkNocount" resultType="int">
  		select count(1) from (select distinct pay_code from pay) as a
  	</select>
  
  	<select id="selectHistoryBypayCode" resultType="pay">
  		SELECT a.pay_code,a.contract_name,a.contract_no,a.this_time_ask_money,c.result_pay,c.pay_time FROM pay_result_info as c
		LEFT JOIN mode_status as b on c.pay_id=b.mode_id
		LEFT JOIN pay as a on a.pay_id=c.pay_id
		where b.status=2 and a.pay_id=#{id}
  	</select>
  	
  	<select id="selectPayByNo" resultType="pay">
  		select pay_id from pay a left join mode_status m on m.mode_id=a.pay_id where m.status=2 and contract_no=#{fbNo} limit 1
  	</select>
  	
  	<update id="updateGenerationAdvancesMoney">
  		update pay set generation_advances_money=generation_advances_money+#{programMoney}
  		where pay_id=#{id}
  	</update>
  	
  	<select id="getFbPayPlanAndMoney" resultType="pay">
  		SELECT MAX(a.fb_contract_schedule) as fb_contract_schedule 
  		FROM pay as a LEFT JOIN mode_status as b on a.pay_id=b.mode_id 
		where a.contract_no=#{no} and b.status=2
  	</select>
  	
  	<select id="getTotalPayMoney" resultType="pay">
		SELECT IFNULL(SUM(result_pay),0)as already_accumulate_money FROM pay_result_info as c
		LEFT JOIN mode_status as b on c.pay_id=b.mode_id
		LEFT JOIN pay as a on a.pay_id=c.pay_id
		where b.status=2 and a.contract_no=#{no}
  	</select>
  	
  	<insert id="addPayResultInfo">
  		insert into pay_result_info(pay_id,result_pay,pay_time) values(#{id},#{resultPay},#{payTime})
  	</insert>
  	
  	<update id="updateHistoryById">
  		UPDATE pay SET history=0  where pay_code =(select a.pay_code from (SELECT pay_code from pay WHERE pay_id=#{id}) AS a)
  	</update>
  	
  	<update id="updateHistoryNow">
  		update pay set history=1 where pay_id=#{id}
  	</update>
  	
  	<select id="getAllDaiDianByFbNo" resultType="pay">
  		SELECT IFNULL(SUM(generation_advances_money),0)as generation_advances_money  FROM pay as a
		LEFT JOIN mode_status as b on a.pay_id=b.mode_id
		where b.status=2 and contract_no=#{no}
  	</select>
  	
  	<update id="updateAuthorisePayment">
  		update pay set authorise_payment=#{money} where pay_id=#{id}
  	</update>
  	
  	<select id="CreatePayNumOrder" statementType="CALLABLE" resultType="java.lang.String">
  		SELECT CreatePayNumOrder(#{year})
  	</select>
  	
  	<update id="updatePayNo">
  		update pay set pay_code=#{no} where pay_id=#{id}
  	</update>
</mapper>