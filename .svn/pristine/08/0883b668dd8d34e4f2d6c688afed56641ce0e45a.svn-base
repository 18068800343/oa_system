<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.mapper.SourcingPurchasingMapper" >
  <resultMap id="BaseResultMap" type="org.ldxx.bean.SourcingPurchasing" >
    <id column="sp_id" property="spId" jdbcType="INTEGER" />
    <result column="sp_name" property="spName" jdbcType="VARCHAR" />
    <result column="sp_type" property="spType" jdbcType="VARCHAR" />
    <result column="eva_score" property="evaScore" jdbcType="VARCHAR" />
    <result column="credit_code" property="creditCode" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_no" property="bankNo" jdbcType="VARCHAR" />
    <result column="enterprise_qualification" property="enterpriseQualification" jdbcType="VARCHAR" />
    <result column="business_license" property="businessLicense" jdbcType="VARCHAR" />
    <result column="business_license_time" property="businessLicenseTime" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="VARCHAR" />
    <result column="legal_person_man" property="legalPersonMan" jdbcType="VARCHAR" />
    <result column="enterprise_type" property="enterpriseType" jdbcType="VARCHAR" />
    <result column="enterprise_addr" property="enterpriseAddr" jdbcType="VARCHAR" />
    <result column="enterprise_sax" property="enterpriseSax" jdbcType="VARCHAR" />
    <result column="enterprise_email" property="enterpriseEmail" jdbcType="VARCHAR" />
    <result column="enterprise_eva" property="enterpriseEva" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.ldxx.bean.SourcingPurchasingWithBLOBs" extends="BaseResultMap" >
    <result column="business_scope" property="businessScope" jdbcType="LONGVARCHAR" />
    <result column="enterprise_desc" property="enterpriseDesc" jdbcType="LONGVARCHAR" />
    <result column="important_event" property="importantEvent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sp_id, sp_name, sp_type, eva_score, credit_code, bank_name, bank_no, enterprise_qualification, 
    business_license, business_license_time, credit, legal_person_man, enterprise_type, 
    enterprise_addr, enterprise_sax, enterprise_email, enterprise_eva
  </sql>
  <sql id="Blob_Column_List" >
    business_scope, enterprise_desc, important_event
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="org.ldxx.bean.SourcingPurchasingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sourcing_purchasing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.ldxx.bean.SourcingPurchasingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sourcing_purchasing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sourcing_purchasing
    where sp_id = #{spId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sourcing_purchasing
    where sp_id = #{spId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.ldxx.bean.SourcingPurchasingExample" >
    delete from sourcing_purchasing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ldxx.bean.SourcingPurchasingWithBLOBs" >
    <selectKey resultType="java.lang.Integer" keyProperty="spId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sourcing_purchasing (sp_name, sp_type, eva_score, 
      credit_code, bank_name, bank_no, 
      enterprise_qualification, business_license, 
      business_license_time, credit, legal_person_man, 
      enterprise_type, enterprise_addr, enterprise_sax, 
      enterprise_email, enterprise_eva, business_scope, 
      enterprise_desc, important_event)
    values (#{spName,jdbcType=VARCHAR}, #{spType,jdbcType=VARCHAR}, #{evaScore,jdbcType=VARCHAR}, 
      #{creditCode,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, 
      #{enterpriseQualification,jdbcType=VARCHAR}, #{businessLicense,jdbcType=VARCHAR}, 
      #{businessLicenseTime,jdbcType=VARCHAR}, #{credit,jdbcType=VARCHAR}, #{legalPersonMan,jdbcType=VARCHAR}, 
      #{enterpriseType,jdbcType=VARCHAR}, #{enterpriseAddr,jdbcType=VARCHAR}, #{enterpriseSax,jdbcType=VARCHAR}, 
      #{enterpriseEmail,jdbcType=VARCHAR}, #{enterpriseEva,jdbcType=VARCHAR}, #{businessScope,jdbcType=LONGVARCHAR}, 
      #{enterpriseDesc,jdbcType=LONGVARCHAR}, #{importantEvent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ldxx.bean.SourcingPurchasingWithBLOBs" >
    <selectKey resultType="java.lang.Integer" keyProperty="spId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sourcing_purchasing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="spName != null" >
        sp_name,
      </if>
      <if test="spType != null" >
        sp_type,
      </if>
      <if test="evaScore != null" >
        eva_score,
      </if>
      <if test="creditCode != null" >
        credit_code,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankNo != null" >
        bank_no,
      </if>
      <if test="enterpriseQualification != null" >
        enterprise_qualification,
      </if>
      <if test="businessLicense != null" >
        business_license,
      </if>
      <if test="businessLicenseTime != null" >
        business_license_time,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="legalPersonMan != null" >
        legal_person_man,
      </if>
      <if test="enterpriseType != null" >
        enterprise_type,
      </if>
      <if test="enterpriseAddr != null" >
        enterprise_addr,
      </if>
      <if test="enterpriseSax != null" >
        enterprise_sax,
      </if>
      <if test="enterpriseEmail != null" >
        enterprise_email,
      </if>
      <if test="enterpriseEva != null" >
        enterprise_eva,
      </if>
      <if test="businessScope != null" >
        business_scope,
      </if>
      <if test="enterpriseDesc != null" >
        enterprise_desc,
      </if>
      <if test="importantEvent != null" >
        important_event,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="spName != null" >
        #{spName,jdbcType=VARCHAR},
      </if>
      <if test="spType != null" >
        #{spType,jdbcType=VARCHAR},
      </if>
      <if test="evaScore != null" >
        #{evaScore,jdbcType=VARCHAR},
      </if>
      <if test="creditCode != null" >
        #{creditCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseQualification != null" >
        #{enterpriseQualification,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseTime != null" >
        #{businessLicenseTime,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonMan != null" >
        #{legalPersonMan,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseType != null" >
        #{enterpriseType,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseAddr != null" >
        #{enterpriseAddr,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseSax != null" >
        #{enterpriseSax,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null" >
        #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEva != null" >
        #{enterpriseEva,jdbcType=VARCHAR},
      </if>
      <if test="businessScope != null" >
        #{businessScope,jdbcType=LONGVARCHAR},
      </if>
      <if test="enterpriseDesc != null" >
        #{enterpriseDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="importantEvent != null" >
        #{importantEvent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ldxx.bean.SourcingPurchasingExample" resultType="java.lang.Integer" >
    select count(*) from sourcing_purchasing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sourcing_purchasing
    <set >
      <if test="record.spId != null" >
        sp_id = #{record.spId,jdbcType=INTEGER},
      </if>
      <if test="record.spName != null" >
        sp_name = #{record.spName,jdbcType=VARCHAR},
      </if>
      <if test="record.spType != null" >
        sp_type = #{record.spType,jdbcType=VARCHAR},
      </if>
      <if test="record.evaScore != null" >
        eva_score = #{record.evaScore,jdbcType=VARCHAR},
      </if>
      <if test="record.creditCode != null" >
        credit_code = #{record.creditCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNo != null" >
        bank_no = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseQualification != null" >
        enterprise_qualification = #{record.enterpriseQualification,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicense != null" >
        business_license = #{record.businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicenseTime != null" >
        business_license_time = #{record.businessLicenseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonMan != null" >
        legal_person_man = #{record.legalPersonMan,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseType != null" >
        enterprise_type = #{record.enterpriseType,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseAddr != null" >
        enterprise_addr = #{record.enterpriseAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseSax != null" >
        enterprise_sax = #{record.enterpriseSax,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEmail != null" >
        enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEva != null" >
        enterprise_eva = #{record.enterpriseEva,jdbcType=VARCHAR},
      </if>
      <if test="record.businessScope != null" >
        business_scope = #{record.businessScope,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.enterpriseDesc != null" >
        enterprise_desc = #{record.enterpriseDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.importantEvent != null" >
        important_event = #{record.importantEvent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sourcing_purchasing
    set sp_id = #{record.spId,jdbcType=INTEGER},
      sp_name = #{record.spName,jdbcType=VARCHAR},
      sp_type = #{record.spType,jdbcType=VARCHAR},
      eva_score = #{record.evaScore,jdbcType=VARCHAR},
      credit_code = #{record.creditCode,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      enterprise_qualification = #{record.enterpriseQualification,jdbcType=VARCHAR},
      business_license = #{record.businessLicense,jdbcType=VARCHAR},
      business_license_time = #{record.businessLicenseTime,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=VARCHAR},
      legal_person_man = #{record.legalPersonMan,jdbcType=VARCHAR},
      enterprise_type = #{record.enterpriseType,jdbcType=VARCHAR},
      enterprise_addr = #{record.enterpriseAddr,jdbcType=VARCHAR},
      enterprise_sax = #{record.enterpriseSax,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      enterprise_eva = #{record.enterpriseEva,jdbcType=VARCHAR},
      business_scope = #{record.businessScope,jdbcType=LONGVARCHAR},
      enterprise_desc = #{record.enterpriseDesc,jdbcType=LONGVARCHAR},
      important_event = #{record.importantEvent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sourcing_purchasing
    set sp_id = #{record.spId,jdbcType=INTEGER},
      sp_name = #{record.spName,jdbcType=VARCHAR},
      sp_type = #{record.spType,jdbcType=VARCHAR},
      eva_score = #{record.evaScore,jdbcType=VARCHAR},
      credit_code = #{record.creditCode,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      enterprise_qualification = #{record.enterpriseQualification,jdbcType=VARCHAR},
      business_license = #{record.businessLicense,jdbcType=VARCHAR},
      business_license_time = #{record.businessLicenseTime,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=VARCHAR},
      legal_person_man = #{record.legalPersonMan,jdbcType=VARCHAR},
      enterprise_type = #{record.enterpriseType,jdbcType=VARCHAR},
      enterprise_addr = #{record.enterpriseAddr,jdbcType=VARCHAR},
      enterprise_sax = #{record.enterpriseSax,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      enterprise_eva = #{record.enterpriseEva,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ldxx.bean.SourcingPurchasingWithBLOBs" >
    update sourcing_purchasing
    <set >
      <if test="spName != null" >
        sp_name = #{spName,jdbcType=VARCHAR},
      </if>
      <if test="spType != null" >
        sp_type = #{spType,jdbcType=VARCHAR},
      </if>
      <if test="evaScore != null" >
        eva_score = #{evaScore,jdbcType=VARCHAR},
      </if>
      <if test="creditCode != null" >
        credit_code = #{creditCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseQualification != null" >
        enterprise_qualification = #{enterpriseQualification,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        business_license = #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseTime != null" >
        business_license_time = #{businessLicenseTime,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonMan != null" >
        legal_person_man = #{legalPersonMan,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseType != null" >
        enterprise_type = #{enterpriseType,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseAddr != null" >
        enterprise_addr = #{enterpriseAddr,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseSax != null" >
        enterprise_sax = #{enterpriseSax,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null" >
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEva != null" >
        enterprise_eva = #{enterpriseEva,jdbcType=VARCHAR},
      </if>
      <if test="businessScope != null" >
        business_scope = #{businessScope,jdbcType=LONGVARCHAR},
      </if>
      <if test="enterpriseDesc != null" >
        enterprise_desc = #{enterpriseDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="importantEvent != null" >
        important_event = #{importantEvent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where sp_id = #{spId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.ldxx.bean.SourcingPurchasingWithBLOBs" >
    update sourcing_purchasing
    set sp_name = #{spName,jdbcType=VARCHAR},
      sp_type = #{spType,jdbcType=VARCHAR},
      eva_score = #{evaScore,jdbcType=VARCHAR},
      credit_code = #{creditCode,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      enterprise_qualification = #{enterpriseQualification,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      business_license_time = #{businessLicenseTime,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=VARCHAR},
      legal_person_man = #{legalPersonMan,jdbcType=VARCHAR},
      enterprise_type = #{enterpriseType,jdbcType=VARCHAR},
      enterprise_addr = #{enterpriseAddr,jdbcType=VARCHAR},
      enterprise_sax = #{enterpriseSax,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      enterprise_eva = #{enterpriseEva,jdbcType=VARCHAR},
      business_scope = #{businessScope,jdbcType=LONGVARCHAR},
      enterprise_desc = #{enterpriseDesc,jdbcType=LONGVARCHAR},
      important_event = #{importantEvent,jdbcType=LONGVARCHAR}
    where sp_id = #{spId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ldxx.bean.SourcingPurchasing" >
    update sourcing_purchasing
    set sp_name = #{spName,jdbcType=VARCHAR},
      sp_type = #{spType,jdbcType=VARCHAR},
      eva_score = #{evaScore,jdbcType=VARCHAR},
      credit_code = #{creditCode,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      enterprise_qualification = #{enterpriseQualification,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      business_license_time = #{businessLicenseTime,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=VARCHAR},
      legal_person_man = #{legalPersonMan,jdbcType=VARCHAR},
      enterprise_type = #{enterpriseType,jdbcType=VARCHAR},
      enterprise_addr = #{enterpriseAddr,jdbcType=VARCHAR},
      enterprise_sax = #{enterpriseSax,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      enterprise_eva = #{enterpriseEva,jdbcType=VARCHAR}
    where sp_id = #{spId,jdbcType=INTEGER}
  </update>
</mapper>