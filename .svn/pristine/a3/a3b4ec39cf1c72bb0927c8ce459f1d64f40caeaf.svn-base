package org.ldxx.controller;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.ldxx.bean.ProjectList;
import org.ldxx.service.BiddingListService;
import org.ldxx.util.TimeUUID;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

/**
 * 投标项目列表
 * @author hp
 *
 */
@Controller
@RequestMapping("diddingList")
public class BiddingListController {
	
	@Autowired
	private BiddingListService bListService;
	
	@RequestMapping("/adddiddingList")
	@ResponseBody
	public Map<String,Object> adddiddingList(ProjectList projectList,MultipartFile file1,MultipartFile file2,MultipartFile file3){
		Map<String,Object> map=new HashMap<>();
		TimeUUID uuid=new TimeUUID();
		String id=uuid.getTimeUUID();
		projectList.setPlId(id);
		if(file1!=null || file2!=null || file3!=null){
			String filename1 = file1.getOriginalFilename();
			String filename2 = file2.getOriginalFilename();
			String filename3 = file3.getOriginalFilename();
			String path="D:/oa/diddingList/"+id;
			File f=new File(path);
			if(!f.exists()){
				f.mkdirs();
			}
			String path1=path+File.separator+filename1;
			String path2=path+File.separator+filename2;
			String path3=path+File.separator+filename3;
			File f1=new File(path1);
			File f2=new File(path2);
			File f3=new File(path2);
			
			try {
				file1.transferTo(f1);
				file2.transferTo(f2);
				file3.transferTo(f3);
				projectList.setZhaofile(filename1);
				projectList.setZhaofileUrl(path1);
				projectList.setToufile(filename2);
				projectList.setToufileUrl(path2);
				projectList.setDrawing(filename3);
				projectList.setDrawingUrl(path3);
			} catch (IllegalStateException | IOException e) {
				e.printStackTrace();
				map.put("result", 0);
			}
				
		}
		int i=bListService.adddiddingList(projectList);
		map.put("result", i);
		map.put("projectList", projectList);
		return map;
	}
	
	@RequestMapping("/deletediddingListById")
	@ResponseBody
	public int deletediddingListById(String plId){
		return bListService.deletediddingListById(plId);
	}
	
	@RequestMapping("/updatediddingList")
	@ResponseBody
	public Map<String,Object> updatediddingList(ProjectList projectList,MultipartFile file1,MultipartFile file2,MultipartFile file3){
		Map<String,Object> map=new HashMap<>();
		String id=projectList.getPlId();
		if(file1!=null || file2!=null || file3!=null){
			String filename1 = file1.getOriginalFilename();
			String filename2 = file2.getOriginalFilename();
			String filename3 = file3.getOriginalFilename();
			String path="D:/oa/diddingList/"+id;
			File f=new File(path);
			if(!f.exists()){
				f.mkdirs();
			}
			String path1=path+File.separator+filename1;
			String path2=path+File.separator+filename2;
			String path3=path+File.separator+filename3;
			File f1=new File(path1);
			File f2=new File(path2);
			File f3=new File(path2);
			
			try {
				file1.transferTo(f1);
				file2.transferTo(f2);
				file3.transferTo(f3);
				projectList.setZhaofile(filename1);
				projectList.setZhaofileUrl(path1);
				projectList.setToufile(filename2);
				projectList.setToufileUrl(path2);
				projectList.setDrawing(filename3);
				projectList.setDrawingUrl(path3);
			} catch (IllegalStateException | IOException e) {
				e.printStackTrace();
				map.put("result", 0);
			}
				
		}
		int i=bListService.updatediddingList(projectList);
		map.put("result", i);
		map.put("projectList", projectList);
		return map;
	}
	
	@RequestMapping("/selectdiddingList")
	@ResponseBody
	public List<ProjectList> selectdiddingList(){
		return bListService.selectdiddingList();
	}

}
