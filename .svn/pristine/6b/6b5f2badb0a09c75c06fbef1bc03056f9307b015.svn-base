package org.ldxx.bean;

import java.util.ArrayList;
import java.util.List;

public class FlowEdgeExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public FlowEdgeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastIsNull() {
            addCriterion("Flo_Node_Last is null");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastIsNotNull() {
            addCriterion("Flo_Node_Last is not null");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastEqualTo(String value) {
            addCriterion("Flo_Node_Last =", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastNotEqualTo(String value) {
            addCriterion("Flo_Node_Last <>", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastGreaterThan(String value) {
            addCriterion("Flo_Node_Last >", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastGreaterThanOrEqualTo(String value) {
            addCriterion("Flo_Node_Last >=", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastLessThan(String value) {
            addCriterion("Flo_Node_Last <", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastLessThanOrEqualTo(String value) {
            addCriterion("Flo_Node_Last <=", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastLike(String value) {
            addCriterion("Flo_Node_Last like", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastNotLike(String value) {
            addCriterion("Flo_Node_Last not like", value, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastIn(List<String> values) {
            addCriterion("Flo_Node_Last in", values, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastNotIn(List<String> values) {
            addCriterion("Flo_Node_Last not in", values, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastBetween(String value1, String value2) {
            addCriterion("Flo_Node_Last between", value1, value2, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeLastNotBetween(String value1, String value2) {
            addCriterion("Flo_Node_Last not between", value1, value2, "floNodeLast");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextIsNull() {
            addCriterion("Flo_Node_Next is null");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextIsNotNull() {
            addCriterion("Flo_Node_Next is not null");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextEqualTo(String value) {
            addCriterion("Flo_Node_Next =", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextNotEqualTo(String value) {
            addCriterion("Flo_Node_Next <>", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextGreaterThan(String value) {
            addCriterion("Flo_Node_Next >", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextGreaterThanOrEqualTo(String value) {
            addCriterion("Flo_Node_Next >=", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextLessThan(String value) {
            addCriterion("Flo_Node_Next <", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextLessThanOrEqualTo(String value) {
            addCriterion("Flo_Node_Next <=", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextLike(String value) {
            addCriterion("Flo_Node_Next like", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextNotLike(String value) {
            addCriterion("Flo_Node_Next not like", value, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextIn(List<String> values) {
            addCriterion("Flo_Node_Next in", values, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextNotIn(List<String> values) {
            addCriterion("Flo_Node_Next not in", values, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextBetween(String value1, String value2) {
            addCriterion("Flo_Node_Next between", value1, value2, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloNodeNextNotBetween(String value1, String value2) {
            addCriterion("Flo_Node_Next not between", value1, value2, "floNodeNext");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdIsNull() {
            addCriterion("Flo_Tmp_ID is null");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdIsNotNull() {
            addCriterion("Flo_Tmp_ID is not null");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdEqualTo(String value) {
            addCriterion("Flo_Tmp_ID =", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdNotEqualTo(String value) {
            addCriterion("Flo_Tmp_ID <>", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdGreaterThan(String value) {
            addCriterion("Flo_Tmp_ID >", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdGreaterThanOrEqualTo(String value) {
            addCriterion("Flo_Tmp_ID >=", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdLessThan(String value) {
            addCriterion("Flo_Tmp_ID <", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdLessThanOrEqualTo(String value) {
            addCriterion("Flo_Tmp_ID <=", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdLike(String value) {
            addCriterion("Flo_Tmp_ID like", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdNotLike(String value) {
            addCriterion("Flo_Tmp_ID not like", value, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdIn(List<String> values) {
            addCriterion("Flo_Tmp_ID in", values, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdNotIn(List<String> values) {
            addCriterion("Flo_Tmp_ID not in", values, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdBetween(String value1, String value2) {
            addCriterion("Flo_Tmp_ID between", value1, value2, "floTmpId");
            return (Criteria) this;
        }

        public Criteria andFloTmpIdNotBetween(String value1, String value2) {
            addCriterion("Flo_Tmp_ID not between", value1, value2, "floTmpId");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}