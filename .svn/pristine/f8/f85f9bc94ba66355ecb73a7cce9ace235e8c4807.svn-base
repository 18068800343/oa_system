package org.ldxx.service.impl;

import java.io.File;
import java.util.List;

import org.ldxx.bean.Accessory;
import org.ldxx.bean.DataArchive;
import org.ldxx.dao.AccessoryDao;
import org.ldxx.dao.DataArchiveDao;
import org.ldxx.service.DataArchiveService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
public class DataArchiveServiceImpl implements DataArchiveService{

	@Autowired
	private DataArchiveDao dao;
	
	@Autowired
	private AccessoryDao adao;
	
	@Transactional
	@Override
	public int addDataArchive(DataArchive archive) {
		List<Accessory> list=archive.getAccessory();
		List<Accessory> list2=archive.getAccessory2();
		int i=dao.addDataArchive(archive);
		if(list.size()>0){
			i=adao.addAccessory(list);
		}
		if(list2.size()>0){
			i=adao.addAccessory(list2);
		}
		return i;
	}

	@Transactional
	@Override
	public int deleteDataArchive(String id) {
		List<Accessory> list=adao.selectAccessoryById(id);
		int i=dao.deleteDataArchive(id);
		if(i>0){
			i=adao.deleteAccessory(id);
			if(i>0){
					for(int a=0;a<list.size();a++){
						String path=list.get(a).getAcUrl();
						File f=new File(path);
						f.delete();
					}
			}
		}
		return i;
	}

	@Transactional
	@Override
	public int updateDataArchive(DataArchive archive) {
		List<Accessory> list=archive.getAccessory();
		List<Accessory> list2=archive.getAccessory2();
		int i=dao.updateDataArchive(archive);
		if(list.size()>0){
			i=adao.addAccessory(list);
		}
		if(list2.size()>0){
			i=adao.addAccessory(list2);
		}
		return i;
	}

	@Override
	public List<DataArchive> selectDataArchive() {
		return dao.selectDataArchive();
	}

}
