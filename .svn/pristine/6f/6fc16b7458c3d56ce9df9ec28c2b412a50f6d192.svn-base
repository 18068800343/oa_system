<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.dao.RiskAssessmentDao" >
	<select id="isExistByprjId" parameterType="String" resultType="int">
		select count(ra_id) from risk_assessment where prj_id=#{prjId}
	</select>
	<insert id="addRiskAssessment" parameterType="riskassessment">
		insert into risk_assessment(ra_id,prj_id,prj_scale,prj_type,pecific_assessment,pecific_assessment_desc,
			flows,flows_desc,profitability,profitability_desc,contract_model,contract_model_desc,
			conditions_terms,conditions_terms_desc,price_adjustment,price_adjustment_desc,payment_clause,
			payment_clause_desc,cultural_environment,cultural_environment_desc,geographical_conditions,
			geographical_conditions_desc,technical_difficulty,technical_difficulty_desc,safety_management_difficulty,
			safety_management_difficulty_desc,evaluation_method,ra_desc) 
		values(#{riskassessment.raId},#{riskassessment.prjId},#{riskassessment.prjScale},#{riskassessment.prjType},
			#{riskassessment.pecificAssessment},#{riskassessment.pecificAssessmentDesc},#{riskassessment.flows},
			#{riskassessment.flowsDesc},#{riskassessment.profitability},#{riskassessment.profitabilityDesc},
			#{riskassessment.contractModel},#{riskassessment.contractModelDesc},#{riskassessment.conditionsTerms},
			#{riskassessment.conditionsTermsDesc},#{riskassessment.priceAdjustment},#{riskassessment.priceAdjustmentDesc},
			#{riskassessment.paymentClause},#{riskassessment.paymentClauseDesc},#{riskassessment.culturalEnvironment},
			#{riskassessment.culturalEnvironmentDesc},#{riskassessment.geographicalConditions},#{riskassessment.geographicalConditionsDesc},
			#{riskassessment.technicalDifficulty},#{riskassessment.technicalDifficultyDesc},#{riskassessment.safetyManagementDifficulty},
			#{riskassessment.safetyManagementDifficultyDesc},#{riskassessment.evaluationMethod},#{riskassessment.raDesc})
	</insert>
	<delete id="deleteRiskAssessmentById" parameterType="String">
		delete from risk_assessment where ra_id=#{raId}
	</delete>
	<update id="updateRiskAssessmentById" parameterType="org.ldxx.bean.RiskAssessment" >
	   update risk_assessment
	   set prj_id = #{riskassessment.prjId,jdbcType=VARCHAR},
	   	 prj_scale = #{riskassessment.prjScale,jdbcType=VARCHAR},
	   	 prj_type = #{riskassessment.prjType,jdbcType=VARCHAR},
	     pecific_assessment = #{riskassessment.pecificAssessment,jdbcType=VARCHAR},
	     pecific_assessment_desc = #{riskassessment.pecificAssessmentDesc,jdbcType=VARCHAR},
	     flows = #{riskassessment.flows,jdbcType=VARCHAR},
	     flows_desc = #{riskassessment.flowsDesc,jdbcType=VARCHAR},
	     profitability = #{riskassessment.profitability,jdbcType=VARCHAR},
	     profitability_desc = #{riskassessment.profitabilityDesc,jdbcType=VARCHAR},
	     contract_model = #{riskassessment.contractModel,jdbcType=VARCHAR},
	     contract_model_desc = #{riskassessment.contractModelDesc,jdbcType=VARCHAR},
	     conditions_terms = #{riskassessment.conditionsTerms,jdbcType=VARCHAR},
	     conditions_terms_desc = #{riskassessment.conditionsTermsDesc,jdbcType=VARCHAR},
	     price_adjustment = #{riskassessment.priceAdjustment,jdbcType=VARCHAR},
	     price_adjustment_desc = #{riskassessment.priceAdjustmentDesc,jdbcType=VARCHAR},
	     payment_clause = #{riskassessment.paymentClause,jdbcType=VARCHAR},
	     payment_clause_desc = #{riskassessment.paymentClauseDesc,jdbcType=VARCHAR},
	     cultural_environment = #{riskassessment.culturalEnvironment,jdbcType=VARCHAR},
	     cultural_environment_desc = #{riskassessment.culturalEnvironmentDesc,jdbcType=VARCHAR},
	     geographical_conditions = #{riskassessment.geographicalConditions,jdbcType=VARCHAR},
	     geographical_conditions_desc = #{riskassessment.geographicalConditionsDesc,jdbcType=VARCHAR},
	     technical_difficulty = #{riskassessment.technicalDifficulty,jdbcType=VARCHAR},
	     technical_difficulty_desc = #{riskassessment.technicalDifficultyDesc,jdbcType=VARCHAR},
	     safety_management_difficulty = #{riskassessment.safetyManagementDifficulty,jdbcType=VARCHAR},
	     safety_management_difficulty_desc = #{riskassessment.safetyManagementDifficultyDesc,jdbcType=VARCHAR},
	     evaluation_method = #{riskassessment.evaluationMethod,jdbcType=VARCHAR},
	     ra_desc = #{riskassessment.raDesc,jdbcType=VARCHAR}
	   where ra_id = #{riskassessment.raId,jdbcType=VARCHAR}
	 </update>
	 <select id="selectRiskAssessmentById" parameterType="String" resultType="riskassessment">
	 	select * from risk_assessment where ra_id=#{raId}
	 </select>
	 <select id="countOfPrjId" parameterType="String" resultType="int">
	 	select count(ra_id) from risk_assessment where prj_id=#{prjId} and ra_id!=#{raId}
	 </select>
	 <select id="selectAllRiskAssessment" resultType="riskassessment">
	 	select * from risk_assessment 
	 </select>
	 <select id="selectRiskAssessmentPrjName" resultType="riskassessment">
	 	select ra_id,prj_id from risk_assessment
	 </select>
	 <select id="selectIdByName" resultType="riskassessment">
	 	select ra_id from risk_assessment where prj_id=#{prjId}
	 </select>
</mapper>