package org.ldxx.util;

import java.util.Date;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.ldxx.bean.Business;
import org.ldxx.bean.BusinessExample;
import org.ldxx.bean.CurrentFlow;
import org.ldxx.bean.CurrentFlowExample;
import org.ldxx.bean.FlowHistroy;
import org.ldxx.bean.FlowNode;
import org.ldxx.bean.FlowNodeExample;
import org.ldxx.exception.FlowException;
import org.ldxx.mapper.BusinessMapper;
import org.ldxx.mapper.CurrentFlowMapper;
import org.ldxx.mapper.FlowHistroyMapper;
import org.ldxx.mapper.FlowNodeMapper;
import org.ldxx.util.BeanUtil;
import org.ldxx.util.TimeUUID;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Component
public class FlowUtill {

	private static final Logger log = Logger.getLogger("myLog");  
	public static FlowUtill INSTANCE; 
	
	@PostConstruct // 第三步  
    public void init() {  
        INSTANCE = this;
        INSTANCE.businessMapper=this.businessMapper;
        INSTANCE.flowNodeMapper=this.flowNodeMapper;
        INSTANCE.currentFlowMapper=this.currentFlowMapper;
        INSTANCE.flowHistroyMapper=this.flowHistroyMapper;
    } 
	
	@Autowired
	BusinessMapper businessMapper;
	@Autowired
	FlowNodeMapper flowNodeMapper;
	@Autowired
	CurrentFlowMapper currentFlowMapper;
	@Autowired
	FlowHistroyMapper flowHistroyMapper;
	
	
	/**
	 * 新流程发起，初始提交
	 * @param currentFlow url,Title,Starter,StartName,Sender,SenderName,FK_Dept,DeptName,NodeName,PRI,SDTOfNode,SDTOfFlow,Actor,ActorType,Memo
	 *        flowHistroy Actor ActorName ActorResult view
	 * @author xianing
	 */
	
	@Transactional
	public String submitFlow(CurrentFlow currentFlow,FlowHistroy flowHistroy) throws Exception{
		currentFlow.setRdt(new Date());
		INSTANCE.init();
		/**0：流程刚发起,暂存状态
		 * 1：流程刚发起,提交状态
		 */
		currentFlow.setWfstate(1);
		BusinessExample example = new BusinessExample();
		String url = currentFlow.getUrl();
		if(null!=url&&url.contains("-")){
			url = url.split("-")[0];
		}else{
			log.error("url为null或者url格式有误");
			throw new FlowException("url format error");
		}
		example.createCriteria().andBusinessurlEqualTo(url);
		List<Business> list =  INSTANCE.businessMapper.selectByExample(example);
		Business business = null;
		if(null!=list&&list.size()==1){
			business = list.get(0);
		}else{
			log.error("业务流中不存在该URL:"+url);
			throw new FlowException("url not found");
		}
		currentFlow.setFloTmpId(business.getFloTmpId());
		FlowNode flowNode = INSTANCE.flowNodeMapper.selectStartFlowNode(business.getFloTmpId());
		currentFlow.setFloNodeId(flowNode.getId());
		currentFlow.setId(new TimeUUID().getTimeUUID());
		flowHistroy = BeanUtil.copyCurrentFlowToHistory(currentFlow, flowHistroy);
		try {
			CurrentFlowExample example2 = new CurrentFlowExample();
			example2.createCriteria().andUrlEqualTo(currentFlow.getUrl());
			List<CurrentFlow> currentFlows = currentFlowMapper.selectByExample(example2);
			if(null!=currentFlows&&currentFlows.size()>0){
				INSTANCE.currentFlowMapper.updateByExampleSelective(currentFlow, example2);
			}else{
				INSTANCE.currentFlowMapper.insert(currentFlow);
			}
			INSTANCE.flowHistroyMapper.insert(flowHistroy);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			log.error("数据库插入错误");
			throw new FlowException("database do error");
		}
		return "success";
	}
	
	@Transactional
	public String zancunFlow(CurrentFlow currentFlow,FlowHistroy flowHistroy) throws Exception{
		currentFlow.setRdt(new Date());
		INSTANCE.init();
		/**0：流程刚发起,暂存状态
		 * 1：流程刚发起,提交状态
		 */
		currentFlow.setWfstate(0);
		BusinessExample example = new BusinessExample();
		String url = currentFlow.getUrl();
		if(null!=url&&url.contains("-")){
			url = url.split("-")[0];
		}else{
			log.error("url为null或者url格式有误");
			throw new FlowException("url format error");
		}
		example.createCriteria().andBusinessurlEqualTo(url);
		List<Business> list =  INSTANCE.businessMapper.selectByExample(example);
		Business business = null;
		if(null!=list&&list.size()==1){
			business = list.get(0);
		}else{
			log.error("业务流中不存在该URL:"+url);
			throw new FlowException("url not found");
		}
		currentFlow.setFloTmpId(business.getFloTmpId());
		FlowNode flowNode = INSTANCE.flowNodeMapper.selectStartFlowNode(business.getFloTmpId());
		currentFlow.setFloNodeId(flowNode.getId());
		currentFlow.setId(new TimeUUID().getTimeUUID());
		flowHistroy = BeanUtil.copyCurrentFlowToHistory(currentFlow, flowHistroy);
		try {
			INSTANCE.currentFlowMapper.insert(currentFlow);
			INSTANCE.flowHistroyMapper.insert(flowHistroy);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			log.error("数据库插入错误");
			throw new FlowException("database do error");
		}
		return "success";
	}
	/**
	 * @param currentFlow url,Title,Starter,StartName,Sender,SenderName,FK_Dept,DeptName,NodeName,PRI,SDTOfNode,SDTOfFlow,Actor,ActorType,Memo
	 *        flowHistroy Actor ActorName ActorResult view
	 * @author xianing
	 */
	@Transactional
	public String cancelFlow(CurrentFlow currentFlow,FlowHistroy flowHistroy) throws Exception{
		INSTANCE.init();
		currentFlow.setRdt(new Date());
		/**0：流程刚发起,提交状态
		 * 5：流程被撤销状态
		 */
		String url = currentFlow.getUrl(); 
		CurrentFlowExample example = new CurrentFlowExample();
		example.createCriteria().andUrlEqualTo(url);
		List<CurrentFlow> list = INSTANCE.currentFlowMapper.selectByExample(example);
		if(null!=list&&list.size()==1){
			currentFlow = list.get(1);
		}else{
			log.error("业务流中不存在该URL:"+currentFlow.getUrl());
			throw new FlowException("url not found");
		}
		currentFlow.setWfstate(0);
		CurrentFlowExample example1 = new CurrentFlowExample();
		example.createCriteria().andUrlEqualTo(url);
		INSTANCE.currentFlowMapper.updateByExampleSelective(currentFlow, example1);
		flowHistroy = BeanUtil.copyCurrentFlowToHistory(currentFlow, flowHistroy);
		INSTANCE.flowHistroyMapper.insert(flowHistroy);
		return "success";
	}
	
	public static void main(String[] args) {
		log.error("我是错误啊啊啊啊啊啊啊");
		log.info("我是日志内容啊啊啊啊啊");
	}
}
