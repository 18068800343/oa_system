<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.mapper.OtherContractReopenMapper" >
  <resultMap id="BaseResultMap" type="org.ldxx.bean.OtherContractReopen" >
    <id column="or_id" property="orId" jdbcType="VARCHAR" />
    <result column="o_id" property="oId" jdbcType="VARCHAR" />
    <result column="contract_code" property="contractCode" jdbcType="VARCHAR" />
    <result column="contract_on_reason" property="contractOnReason" jdbcType="VARCHAR" />
    <result column="cantel_time" property="cantelTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    or_id, o_id, contract_code, contract_on_reason, cantel_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.ldxx.bean.OtherContractReopenExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from other_contract_reopen
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from other_contract_reopen
    where or_id = #{orId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from other_contract_reopen
    where or_id = #{orId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.ldxx.bean.OtherContractReopenExample" >
    delete from other_contract_reopen
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ldxx.bean.OtherContractReopen" >
    <selectKey resultType="java.lang.String" keyProperty="orId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into other_contract_reopen (o_id, contract_code, contract_on_reason, 
      cantel_time)
    values (#{oId,jdbcType=VARCHAR}, #{contractCode,jdbcType=VARCHAR}, #{contractOnReason,jdbcType=VARCHAR}, 
      #{cantelTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ldxx.bean.OtherContractReopen" >
    <selectKey resultType="java.lang.String" keyProperty="orId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into other_contract_reopen
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oId != null" >
        o_id,
      </if>
      <if test="contractCode != null" >
        contract_code,
      </if>
      <if test="contractOnReason != null" >
        contract_on_reason,
      </if>
      <if test="cantelTime != null" >
        cantel_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oId != null" >
        #{oId,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractOnReason != null" >
        #{contractOnReason,jdbcType=VARCHAR},
      </if>
      <if test="cantelTime != null" >
        #{cantelTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ldxx.bean.OtherContractReopenExample" resultType="java.lang.Integer" >
    select count(*) from other_contract_reopen
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update other_contract_reopen
    <set >
      <if test="record.orId != null" >
        or_id = #{record.orId,jdbcType=VARCHAR},
      </if>
      <if test="record.oId != null" >
        o_id = #{record.oId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractCode != null" >
        contract_code = #{record.contractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contractOnReason != null" >
        contract_on_reason = #{record.contractOnReason,jdbcType=VARCHAR},
      </if>
      <if test="record.cantelTime != null" >
        cantel_time = #{record.cantelTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update other_contract_reopen
    set or_id = #{record.orId,jdbcType=VARCHAR},
      o_id = #{record.oId,jdbcType=VARCHAR},
      contract_code = #{record.contractCode,jdbcType=VARCHAR},
      contract_on_reason = #{record.contractOnReason,jdbcType=VARCHAR},
      cantel_time = #{record.cantelTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ldxx.bean.OtherContractReopen" >
    update other_contract_reopen
    <set >
      <if test="oId != null" >
        o_id = #{oId,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractOnReason != null" >
        contract_on_reason = #{contractOnReason,jdbcType=VARCHAR},
      </if>
      <if test="cantelTime != null" >
        cantel_time = #{cantelTime,jdbcType=VARCHAR},
      </if>
    </set>
    where or_id = #{orId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ldxx.bean.OtherContractReopen" >
    update other_contract_reopen
    set o_id = #{oId,jdbcType=VARCHAR},
      contract_code = #{contractCode,jdbcType=VARCHAR},
      contract_on_reason = #{contractOnReason,jdbcType=VARCHAR},
      cantel_time = #{cantelTime,jdbcType=VARCHAR}
    where or_id = #{orId,jdbcType=VARCHAR}
  </update>
</mapper>