<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.mapper.ContractWorkMapper" >
  <resultMap id="BaseResultMap" type="org.ldxx.bean.ContractWork" >
    <result column="cw_id" property="cwId" jdbcType="VARCHAR" />
    <result column="prj_code" property="prjCode" jdbcType="VARCHAR" />
    <result column="cj_contract_name" property="cjContractName" jdbcType="VARCHAR" />
    <result column="cj_contract_code" property="cjContractCode" jdbcType="VARCHAR" />
    <result column="contract_name_jia" property="contractNameJia" jdbcType="VARCHAR" />
    <result column="prj_probably_text" property="prjProbablyText" jdbcType="VARCHAR" />
    <result column="prj_long_time" property="prjLongTime" jdbcType="VARCHAR" />
    <result column="work_text" property="workText" jdbcType="VARCHAR" />
    <result column="contract_money" property="contractMoney" jdbcType="REAL" />
    <result column="end_money" property="endMoney" jdbcType="REAL" />
    <result column="main_department" property="mainDepartment" jdbcType="REAL" />
    <result column="cooperation_department_money1" property="cooperationDepartmentMoney1" jdbcType="REAL" />
    <result column="cooperation_department_money2" property="cooperationDepartmentMoney2" jdbcType="REAL" />
    <result column="cooperation_department_money3" property="cooperationDepartmentMoney3" jdbcType="REAL" />
    <result column="all_receieve_money" property="allReceieveMoney" jdbcType="REAL" />
    <result column="prj_direct_cost" property="prjDirectCost" jdbcType="VARCHAR" />
    <result column="prj_charge_man" property="prjChargeMan" jdbcType="VARCHAR" />
    <result column="other_file" property="otherFile" jdbcType="VARCHAR" />
    <result column="co_type" property="coType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cw_id, prj_code, cj_contract_name, cj_contract_code, contract_name_jia, prj_probably_text, 
    prj_long_time, work_text, contract_money, end_money, main_department, cooperation_department_money1, 
    cooperation_department_money2, cooperation_department_money3, all_receieve_money, 
    prj_direct_cost, prj_charge_man, other_file, co_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.ldxx.bean.ContractWorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ldxx.bean.ContractWorkExample" >
    delete from contract_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ldxx.bean.ContractWork" >
    <selectKey resultType="java.lang.String" keyProperty="cwId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into contract_work (prj_code, cj_contract_name, cj_contract_code, 
      contract_name_jia, prj_probably_text, prj_long_time, 
      work_text, contract_money, end_money, 
      main_department, cooperation_department_money1, 
      cooperation_department_money2, cooperation_department_money3, 
      all_receieve_money, prj_direct_cost, prj_charge_man, 
      other_file, co_type)
    values (#{prjCode,jdbcType=VARCHAR}, #{cjContractName,jdbcType=VARCHAR}, #{cjContractCode,jdbcType=VARCHAR}, 
      #{contractNameJia,jdbcType=VARCHAR}, #{prjProbablyText,jdbcType=VARCHAR}, #{prjLongTime,jdbcType=VARCHAR}, 
      #{workText,jdbcType=VARCHAR}, #{contractMoney,jdbcType=REAL}, #{endMoney,jdbcType=REAL}, 
      #{mainDepartment,jdbcType=REAL}, #{cooperationDepartmentMoney1,jdbcType=REAL}, 
      #{cooperationDepartmentMoney2,jdbcType=REAL}, #{cooperationDepartmentMoney3,jdbcType=REAL}, 
      #{allReceieveMoney,jdbcType=REAL}, #{prjDirectCost,jdbcType=VARCHAR}, #{prjChargeMan,jdbcType=VARCHAR}, 
      #{otherFile,jdbcType=VARCHAR}, #{coType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.ldxx.bean.ContractWork" >
    <selectKey resultType="java.lang.String" keyProperty="cwId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into contract_work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="prjCode != null" >
        prj_code,
      </if>
      <if test="cjContractName != null" >
        cj_contract_name,
      </if>
      <if test="cjContractCode != null" >
        cj_contract_code,
      </if>
      <if test="contractNameJia != null" >
        contract_name_jia,
      </if>
      <if test="prjProbablyText != null" >
        prj_probably_text,
      </if>
      <if test="prjLongTime != null" >
        prj_long_time,
      </if>
      <if test="workText != null" >
        work_text,
      </if>
      <if test="contractMoney != null" >
        contract_money,
      </if>
      <if test="endMoney != null" >
        end_money,
      </if>
      <if test="mainDepartment != null" >
        main_department,
      </if>
      <if test="cooperationDepartmentMoney1 != null" >
        cooperation_department_money1,
      </if>
      <if test="cooperationDepartmentMoney2 != null" >
        cooperation_department_money2,
      </if>
      <if test="cooperationDepartmentMoney3 != null" >
        cooperation_department_money3,
      </if>
      <if test="allReceieveMoney != null" >
        all_receieve_money,
      </if>
      <if test="prjDirectCost != null" >
        prj_direct_cost,
      </if>
      <if test="prjChargeMan != null" >
        prj_charge_man,
      </if>
      <if test="otherFile != null" >
        other_file,
      </if>
      <if test="coType != null" >
        co_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="prjCode != null" >
        #{prjCode,jdbcType=VARCHAR},
      </if>
      <if test="cjContractName != null" >
        #{cjContractName,jdbcType=VARCHAR},
      </if>
      <if test="cjContractCode != null" >
        #{cjContractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractNameJia != null" >
        #{contractNameJia,jdbcType=VARCHAR},
      </if>
      <if test="prjProbablyText != null" >
        #{prjProbablyText,jdbcType=VARCHAR},
      </if>
      <if test="prjLongTime != null" >
        #{prjLongTime,jdbcType=VARCHAR},
      </if>
      <if test="workText != null" >
        #{workText,jdbcType=VARCHAR},
      </if>
      <if test="contractMoney != null" >
        #{contractMoney,jdbcType=REAL},
      </if>
      <if test="endMoney != null" >
        #{endMoney,jdbcType=REAL},
      </if>
      <if test="mainDepartment != null" >
        #{mainDepartment,jdbcType=REAL},
      </if>
      <if test="cooperationDepartmentMoney1 != null" >
        #{cooperationDepartmentMoney1,jdbcType=REAL},
      </if>
      <if test="cooperationDepartmentMoney2 != null" >
        #{cooperationDepartmentMoney2,jdbcType=REAL},
      </if>
      <if test="cooperationDepartmentMoney3 != null" >
        #{cooperationDepartmentMoney3,jdbcType=REAL},
      </if>
      <if test="allReceieveMoney != null" >
        #{allReceieveMoney,jdbcType=REAL},
      </if>
      <if test="prjDirectCost != null" >
        #{prjDirectCost,jdbcType=VARCHAR},
      </if>
      <if test="prjChargeMan != null" >
        #{prjChargeMan,jdbcType=VARCHAR},
      </if>
      <if test="otherFile != null" >
        #{otherFile,jdbcType=VARCHAR},
      </if>
      <if test="coType != null" >
        #{coType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ldxx.bean.ContractWorkExample" resultType="java.lang.Integer" >
    select count(*) from contract_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update contract_work
    <set >
      <if test="record.cwId != null" >
        cw_id = #{record.cwId,jdbcType=VARCHAR},
      </if>
      <if test="record.prjCode != null" >
        prj_code = #{record.prjCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cjContractName != null" >
        cj_contract_name = #{record.cjContractName,jdbcType=VARCHAR},
      </if>
      <if test="record.cjContractCode != null" >
        cj_contract_code = #{record.cjContractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNameJia != null" >
        contract_name_jia = #{record.contractNameJia,jdbcType=VARCHAR},
      </if>
      <if test="record.prjProbablyText != null" >
        prj_probably_text = #{record.prjProbablyText,jdbcType=VARCHAR},
      </if>
      <if test="record.prjLongTime != null" >
        prj_long_time = #{record.prjLongTime,jdbcType=VARCHAR},
      </if>
      <if test="record.workText != null" >
        work_text = #{record.workText,jdbcType=VARCHAR},
      </if>
      <if test="record.contractMoney != null" >
        contract_money = #{record.contractMoney,jdbcType=REAL},
      </if>
      <if test="record.endMoney != null" >
        end_money = #{record.endMoney,jdbcType=REAL},
      </if>
      <if test="record.mainDepartment != null" >
        main_department = #{record.mainDepartment,jdbcType=REAL},
      </if>
      <if test="record.cooperationDepartmentMoney1 != null" >
        cooperation_department_money1 = #{record.cooperationDepartmentMoney1,jdbcType=REAL},
      </if>
      <if test="record.cooperationDepartmentMoney2 != null" >
        cooperation_department_money2 = #{record.cooperationDepartmentMoney2,jdbcType=REAL},
      </if>
      <if test="record.cooperationDepartmentMoney3 != null" >
        cooperation_department_money3 = #{record.cooperationDepartmentMoney3,jdbcType=REAL},
      </if>
      <if test="record.allReceieveMoney != null" >
        all_receieve_money = #{record.allReceieveMoney,jdbcType=REAL},
      </if>
      <if test="record.prjDirectCost != null" >
        prj_direct_cost = #{record.prjDirectCost,jdbcType=VARCHAR},
      </if>
      <if test="record.prjChargeMan != null" >
        prj_charge_man = #{record.prjChargeMan,jdbcType=VARCHAR},
      </if>
      <if test="record.otherFile != null" >
        other_file = #{record.otherFile,jdbcType=VARCHAR},
      </if>
      <if test="record.coType != null" >
        co_type = #{record.coType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update contract_work
    set cw_id = #{record.cwId,jdbcType=VARCHAR},
      prj_code = #{record.prjCode,jdbcType=VARCHAR},
      cj_contract_name = #{record.cjContractName,jdbcType=VARCHAR},
      cj_contract_code = #{record.cjContractCode,jdbcType=VARCHAR},
      contract_name_jia = #{record.contractNameJia,jdbcType=VARCHAR},
      prj_probably_text = #{record.prjProbablyText,jdbcType=VARCHAR},
      prj_long_time = #{record.prjLongTime,jdbcType=VARCHAR},
      work_text = #{record.workText,jdbcType=VARCHAR},
      contract_money = #{record.contractMoney,jdbcType=REAL},
      end_money = #{record.endMoney,jdbcType=REAL},
      main_department = #{record.mainDepartment,jdbcType=REAL},
      cooperation_department_money1 = #{record.cooperationDepartmentMoney1,jdbcType=REAL},
      cooperation_department_money2 = #{record.cooperationDepartmentMoney2,jdbcType=REAL},
      cooperation_department_money3 = #{record.cooperationDepartmentMoney3,jdbcType=REAL},
      all_receieve_money = #{record.allReceieveMoney,jdbcType=REAL},
      prj_direct_cost = #{record.prjDirectCost,jdbcType=VARCHAR},
      prj_charge_man = #{record.prjChargeMan,jdbcType=VARCHAR},
      other_file = #{record.otherFile,jdbcType=VARCHAR},
      co_type = #{record.coType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>