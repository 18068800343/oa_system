<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ldxx.mapper.OtherContractMapper" >
  <resultMap id="BaseResultMap" type="org.ldxx.bean.OtherContract" >
    <id column="o_id" property="oId" jdbcType="VARCHAR" />
    <result column="contract_type" property="contractType" jdbcType="VARCHAR" />
    <result column="contract_code" property="contractCode" jdbcType="VARCHAR" />
    <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
    <result column="contract_name_jia" property="contractNameJia" jdbcType="VARCHAR" />
    <result column="contract_name_yi" property="contractNameYi" jdbcType="VARCHAR" />
    <result column="contract_money" property="contractMoney" jdbcType="REAL" />
    <result column="abutment_department" property="abutmentDepartment" jdbcType="VARCHAR" />
    <result column="contract_start_time" property="contractStartTime" jdbcType="VARCHAR" />
    <result column="contract_end_time" property="contractEndTime" jdbcType="VARCHAR" />
    <result column="contract_probably_text" property="contractProbablyText" jdbcType="VARCHAR" />
    <result column="abutment_signed_time" property="abutmentSignedTime" jdbcType="VARCHAR" />
    <result column="contract_file_path" property="contractFilePath" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    o_id, contract_type, contract_code, contract_name, contract_name_jia, contract_name_yi, 
    contract_money, abutment_department, contract_start_time, contract_end_time, contract_probably_text, 
    abutment_signed_time, contract_file_path, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.ldxx.bean.OtherContractExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from other_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from other_contract
    where o_id = #{oId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from other_contract
    where o_id = #{oId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.ldxx.bean.OtherContractExample" >
    delete from other_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ldxx.bean.OtherContract" >
    <selectKey resultType="java.lang.String" keyProperty="oId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into other_contract (contract_type, contract_code, contract_name, 
      contract_name_jia, contract_name_yi, contract_money, 
      abutment_department, contract_start_time, 
      contract_end_time, contract_probably_text, 
      abutment_signed_time, contract_file_path, status
      )
    values (#{contractType,jdbcType=VARCHAR}, #{contractCode,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, 
      #{contractNameJia,jdbcType=VARCHAR}, #{contractNameYi,jdbcType=VARCHAR}, #{contractMoney,jdbcType=REAL}, 
      #{abutmentDepartment,jdbcType=VARCHAR}, #{contractStartTime,jdbcType=VARCHAR}, 
      #{contractEndTime,jdbcType=VARCHAR}, #{contractProbablyText,jdbcType=VARCHAR}, 
      #{abutmentSignedTime,jdbcType=VARCHAR}, #{contractFilePath,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.ldxx.bean.OtherContract" >
    <selectKey resultType="java.lang.String" keyProperty="oId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into other_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractType != null" >
        contract_type,
      </if>
      <if test="contractCode != null" >
        contract_code,
      </if>
      <if test="contractName != null" >
        contract_name,
      </if>
      <if test="contractNameJia != null" >
        contract_name_jia,
      </if>
      <if test="contractNameYi != null" >
        contract_name_yi,
      </if>
      <if test="contractMoney != null" >
        contract_money,
      </if>
      <if test="abutmentDepartment != null" >
        abutment_department,
      </if>
      <if test="contractStartTime != null" >
        contract_start_time,
      </if>
      <if test="contractEndTime != null" >
        contract_end_time,
      </if>
      <if test="contractProbablyText != null" >
        contract_probably_text,
      </if>
      <if test="abutmentSignedTime != null" >
        abutment_signed_time,
      </if>
      <if test="contractFilePath != null" >
        contract_file_path,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractType != null" >
        #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractNameJia != null" >
        #{contractNameJia,jdbcType=VARCHAR},
      </if>
      <if test="contractNameYi != null" >
        #{contractNameYi,jdbcType=VARCHAR},
      </if>
      <if test="contractMoney != null" >
        #{contractMoney,jdbcType=REAL},
      </if>
      <if test="abutmentDepartment != null" >
        #{abutmentDepartment,jdbcType=VARCHAR},
      </if>
      <if test="contractStartTime != null" >
        #{contractStartTime,jdbcType=VARCHAR},
      </if>
      <if test="contractEndTime != null" >
        #{contractEndTime,jdbcType=VARCHAR},
      </if>
      <if test="contractProbablyText != null" >
        #{contractProbablyText,jdbcType=VARCHAR},
      </if>
      <if test="abutmentSignedTime != null" >
        #{abutmentSignedTime,jdbcType=VARCHAR},
      </if>
      <if test="contractFilePath != null" >
        #{contractFilePath,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ldxx.bean.OtherContractExample" resultType="java.lang.Integer" >
    select count(*) from other_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update other_contract
    <set >
      <if test="record.oId != null" >
        o_id = #{record.oId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractType != null" >
        contract_type = #{record.contractType,jdbcType=VARCHAR},
      </if>
      <if test="record.contractCode != null" >
        contract_code = #{record.contractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contractName != null" >
        contract_name = #{record.contractName,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNameJia != null" >
        contract_name_jia = #{record.contractNameJia,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNameYi != null" >
        contract_name_yi = #{record.contractNameYi,jdbcType=VARCHAR},
      </if>
      <if test="record.contractMoney != null" >
        contract_money = #{record.contractMoney,jdbcType=REAL},
      </if>
      <if test="record.abutmentDepartment != null" >
        abutment_department = #{record.abutmentDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.contractStartTime != null" >
        contract_start_time = #{record.contractStartTime,jdbcType=VARCHAR},
      </if>
      <if test="record.contractEndTime != null" >
        contract_end_time = #{record.contractEndTime,jdbcType=VARCHAR},
      </if>
      <if test="record.contractProbablyText != null" >
        contract_probably_text = #{record.contractProbablyText,jdbcType=VARCHAR},
      </if>
      <if test="record.abutmentSignedTime != null" >
        abutment_signed_time = #{record.abutmentSignedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.contractFilePath != null" >
        contract_file_path = #{record.contractFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update other_contract
    set o_id = #{record.oId,jdbcType=VARCHAR},
      contract_type = #{record.contractType,jdbcType=VARCHAR},
      contract_code = #{record.contractCode,jdbcType=VARCHAR},
      contract_name = #{record.contractName,jdbcType=VARCHAR},
      contract_name_jia = #{record.contractNameJia,jdbcType=VARCHAR},
      contract_name_yi = #{record.contractNameYi,jdbcType=VARCHAR},
      contract_money = #{record.contractMoney,jdbcType=REAL},
      abutment_department = #{record.abutmentDepartment,jdbcType=VARCHAR},
      contract_start_time = #{record.contractStartTime,jdbcType=VARCHAR},
      contract_end_time = #{record.contractEndTime,jdbcType=VARCHAR},
      contract_probably_text = #{record.contractProbablyText,jdbcType=VARCHAR},
      abutment_signed_time = #{record.abutmentSignedTime,jdbcType=VARCHAR},
      contract_file_path = #{record.contractFilePath,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ldxx.bean.OtherContract" >
    update other_contract
    <set >
      <if test="contractType != null" >
        contract_type = #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractNameJia != null" >
        contract_name_jia = #{contractNameJia,jdbcType=VARCHAR},
      </if>
      <if test="contractNameYi != null" >
        contract_name_yi = #{contractNameYi,jdbcType=VARCHAR},
      </if>
      <if test="contractMoney != null" >
        contract_money = #{contractMoney,jdbcType=REAL},
      </if>
      <if test="abutmentDepartment != null" >
        abutment_department = #{abutmentDepartment,jdbcType=VARCHAR},
      </if>
      <if test="contractStartTime != null" >
        contract_start_time = #{contractStartTime,jdbcType=VARCHAR},
      </if>
      <if test="contractEndTime != null" >
        contract_end_time = #{contractEndTime,jdbcType=VARCHAR},
      </if>
      <if test="contractProbablyText != null" >
        contract_probably_text = #{contractProbablyText,jdbcType=VARCHAR},
      </if>
      <if test="abutmentSignedTime != null" >
        abutment_signed_time = #{abutmentSignedTime,jdbcType=VARCHAR},
      </if>
      <if test="contractFilePath != null" >
        contract_file_path = #{contractFilePath,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where o_id = #{oId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ldxx.bean.OtherContract" >
    update other_contract
    set contract_type = #{contractType,jdbcType=VARCHAR},
      contract_code = #{contractCode,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      contract_name_jia = #{contractNameJia,jdbcType=VARCHAR},
      contract_name_yi = #{contractNameYi,jdbcType=VARCHAR},
      contract_money = #{contractMoney,jdbcType=REAL},
      abutment_department = #{abutmentDepartment,jdbcType=VARCHAR},
      contract_start_time = #{contractStartTime,jdbcType=VARCHAR},
      contract_end_time = #{contractEndTime,jdbcType=VARCHAR},
      contract_probably_text = #{contractProbablyText,jdbcType=VARCHAR},
      abutment_signed_time = #{abutmentSignedTime,jdbcType=VARCHAR},
      contract_file_path = #{contractFilePath,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where o_id = #{oId,jdbcType=VARCHAR}
  </update>
</mapper>